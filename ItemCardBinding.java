// Generated by view binder compiler. Do not edit!
package com.example.payment_reminder_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.payment_reminder_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView check;

  @NonNull
  public final TextView dateCard;

  @NonNull
  public final ImageView imgCard;

  @NonNull
  public final RelativeLayout rlMain;

  @NonNull
  public final TextView titleCard;

  private ItemCardBinding(@NonNull RelativeLayout rootView, @NonNull ImageView check,
      @NonNull TextView dateCard, @NonNull ImageView imgCard, @NonNull RelativeLayout rlMain,
      @NonNull TextView titleCard) {
    this.rootView = rootView;
    this.check = check;
    this.dateCard = dateCard;
    this.imgCard = imgCard;
    this.rlMain = rlMain;
    this.titleCard = titleCard;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.check;
      ImageView check = ViewBindings.findChildViewById(rootView, id);
      if (check == null) {
        break missingId;
      }

      id = R.id.date_card;
      TextView dateCard = ViewBindings.findChildViewById(rootView, id);
      if (dateCard == null) {
        break missingId;
      }

      id = R.id.img_card;
      ImageView imgCard = ViewBindings.findChildViewById(rootView, id);
      if (imgCard == null) {
        break missingId;
      }

      id = R.id.rl_main;
      RelativeLayout rlMain = ViewBindings.findChildViewById(rootView, id);
      if (rlMain == null) {
        break missingId;
      }

      id = R.id.title_card;
      TextView titleCard = ViewBindings.findChildViewById(rootView, id);
      if (titleCard == null) {
        break missingId;
      }

      return new ItemCardBinding((RelativeLayout) rootView, check, dateCard, imgCard, rlMain,
          titleCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
