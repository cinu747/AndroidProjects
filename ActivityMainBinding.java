// Generated by view binder compiler. Do not edit!
package com.example.payment_reminder_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.payment_reminder_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout availableLayout;

  @NonNull
  public final Button listBtn;

  @NonNull
  public final Button logout;

  @NonNull
  public final RelativeLayout overDueLayout;

  @NonNull
  public final RecyclerView recyclerViewAvailable;

  @NonNull
  public final RecyclerView recyclerViewOverdue;

  @NonNull
  public final RecyclerView recyclerViewUpcoming;

  @NonNull
  public final RelativeLayout upcomingLayout;

  private ActivityMainBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout availableLayout, @NonNull Button listBtn, @NonNull Button logout,
      @NonNull RelativeLayout overDueLayout, @NonNull RecyclerView recyclerViewAvailable,
      @NonNull RecyclerView recyclerViewOverdue, @NonNull RecyclerView recyclerViewUpcoming,
      @NonNull RelativeLayout upcomingLayout) {
    this.rootView = rootView;
    this.availableLayout = availableLayout;
    this.listBtn = listBtn;
    this.logout = logout;
    this.overDueLayout = overDueLayout;
    this.recyclerViewAvailable = recyclerViewAvailable;
    this.recyclerViewOverdue = recyclerViewOverdue;
    this.recyclerViewUpcoming = recyclerViewUpcoming;
    this.upcomingLayout = upcomingLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.available_layout;
      RelativeLayout availableLayout = ViewBindings.findChildViewById(rootView, id);
      if (availableLayout == null) {
        break missingId;
      }

      id = R.id.list_btn;
      Button listBtn = ViewBindings.findChildViewById(rootView, id);
      if (listBtn == null) {
        break missingId;
      }

      id = R.id.logout;
      Button logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.over_due_layout;
      RelativeLayout overDueLayout = ViewBindings.findChildViewById(rootView, id);
      if (overDueLayout == null) {
        break missingId;
      }

      id = R.id.recycler_view_available;
      RecyclerView recyclerViewAvailable = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAvailable == null) {
        break missingId;
      }

      id = R.id.recycler_view_overdue;
      RecyclerView recyclerViewOverdue = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewOverdue == null) {
        break missingId;
      }

      id = R.id.recycler_view_upcoming;
      RecyclerView recyclerViewUpcoming = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewUpcoming == null) {
        break missingId;
      }

      id = R.id.upcoming_layout;
      RelativeLayout upcomingLayout = ViewBindings.findChildViewById(rootView, id);
      if (upcomingLayout == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, availableLayout, listBtn, logout,
          overDueLayout, recyclerViewAvailable, recyclerViewOverdue, recyclerViewUpcoming,
          upcomingLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
